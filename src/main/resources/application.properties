spring.application.name = "project-name"


#HTTP Server Port
server.port = 8000

#Context oath of the application
server.servlet.context-path=/project-name

spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

#Default HTTP Session timeout
server.servlet.session.timeout=15m

#Log Levels severity mapping
logging.level.org.springframework=ERROR
#logging.level.org.hibernate=DEBUG
logging.level.info.business.realestate=INFO

#Log file name
logging.file.name=projectName.log

# End points to include by name or wild card
#management.endpoints.web.exposure.include=*; #disable it before deploying application in production

# End points to exclude by name or wild card
#management.endpoints.web.exposure.exclude=beans, mapping

# Base path for actuator end points
#management.endpoints.web.base-path=/actuator 

# Default user name and password
#spring.security.user.name=admin
#spring.security.user.password=topsecret


#Here, spring.jpa.hibernate.ddl-auto can be none, update, create, or create-drop. 
#See the Hibernate documentation for details.
#none: The default for MySQL. No change is made to the database structure.
#update: Hibernate changes the database according to the given entity structures.
#create: Creates the database every time but does not drop it on close.
#create-drop: Creates the database and drops it when SessionFactory closes.
#You must begin with either create or update, because you do not yet have the database structure.
#After the first run, you can switch it to update or none, according to program requirements.
#Use update when you want to make some change to the database structure.
#The default for H2 and other embedded databases is create-drop. For other databases, 
#such as MySQL, the default is none.

# JDBC URL of the database
spring.datasource.url = jdbc:mysql://172.17.0.1:3306/RealEstate?useSSL=false&serverTimezone=UTC

#login username of the database
spring.datasource.username=root
spring.datasource.password=pranjul
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

